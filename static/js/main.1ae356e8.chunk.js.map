{"version":3,"sources":["GlobalStyle.js","components/Main/Section/Form/styled.js","components/Main/Section/Form/index.js","components/Main/Section/Tasks/styled.js","components/Main/Section/Tasks/index.js","components/Main/Section/styled.js","components/Main/Section/index.js","components/Main/Section/Buttons/styled.js","components/Main/Section/Buttons/index.js","components/Header/styled.js","components/Header/index.js","components/Main/styled.js","components/Main/index.js","App.js","useLocalStorageTasks.js","useTasks.js","reportWebVitals.js","index.js","theme.js"],"names":["GlobalStyle","createGlobalStyle","theme","colors","backgroundColor","StyledForm","styled","form","size","mobile","TextInput","input","Button","button","mainColor","filter","hover","active","Form","addNewTask","useState","newTaskContent","setNewTaskContent","textFocus","useRef","onSubmit","event","preventDefault","trim","value","ref","type","placeholder","onChange","target","onClick","current","focus","List","ul","Item","span","hide","css","ListText","done","TextRenameForm","remove","rename","Tasks","tasks","hideDone","toggleTaskDone","renameTask","removeTask","changeTaskContent","cancelRenameTask","onFormSubmit","map","task","id","content","title","StyledSection","section","Header","header","Title","h2","SectionBody","div","Section","body","extraHeaderContent","AdditionalButtons","StyledButton","Buttons","finishAllTasks","toggleHideDone","length","disabled","every","StyledHeader","h1","StyledMain","main","Main","children","App","setHideDone","JSON","parse","localStorage","getItem","setTasks","useEffect","setItem","stringify","useLocalStorageTasks","useTasks","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ae356e8.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\nhtml {\r\n  box-sizing: border-box;\r\n}\r\n\r\n*, ::after, ::before {\r\n  box-sizing: inherit;\r\n  margin: 0;\r\n}\r\n\r\nbutton {\r\n  cursor: pointer;\r\n}\r\n\r\nbody {\r\n  max-width: 900px;\r\n  margin: 0 auto;\r\n  padding: 10px;\r\n  font-family: 'Montserrat', sans-serif;\r\n  background-color: ${({ theme }) => theme.colors.backgroundColor};\r\n}\r\n\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n  display: grid;\r\n  grid-template-columns: 1fr auto;\r\n  grid-gap: 20px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.size.mobile}) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const TextInput = styled.input`\r\n  padding: 10px;\r\n  background-color: white;\r\n  border: 1px solid rgb(220, 220, 220);\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  background-color: ${({ theme }) => theme.colors.mainColor};\r\n  color: rgb(230, 230, 230);\r\n  padding: 10px;\r\n  border: none;\r\n  transition: background 0.5s linear, transform 0.5s linear;\r\n\r\n  &:hover {\r\n    filter: ${({ theme }) => theme.filter.hover};\r\n    transform: scale(1.1);\r\n  }\r\n\r\n  &:active {\r\n    filter: ${({ theme }) => theme.filter.active};\r\n    outline: 2px solid black;\r\n  }\r\n`;\r\n","import { useRef, useState } from \"react\";\r\nimport { StyledForm, TextInput, Button } from \"./styled\";\r\n\r\nexport const Form = ({ addNewTask }) => {\r\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n  const textFocus = useRef(null);\r\n\r\n  const setTextFocus = () => {\r\n    textFocus.current.focus();\r\n  };\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (newTaskContent.trim() === \"\") return;\r\n    addNewTask(newTaskContent);\r\n    setNewTaskContent(\"\");\r\n  };\r\n\r\n  return (\r\n    <StyledForm onSubmit={onFormSubmit}>\r\n      <TextInput\r\n        value={newTaskContent}\r\n        ref={textFocus}\r\n        type=\"text\"\r\n        placeholder=\"Co jest do zrobienia?\"\r\n        onChange={({ target }) => setNewTaskContent(target.value)}\r\n      />\r\n      <Button onClick={setTextFocus}>Dodaj zadanie</Button>\r\n    </StyledForm>\r\n  );\r\n};\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n  background-color: white;\r\n  list-style: none;\r\n  padding: 0;\r\n`;\r\n\r\nexport const Item = styled.span`\r\n  display: grid;\r\n  grid-template-columns: auto 1fr repeat(2, auto);\r\n  align-items: center;\r\n  grid-gap: 10px;\r\n  padding: 10px;\r\n  border-bottom: 1px solid rgb(218, 218, 218);\r\n\r\n  ${({ hide }) =>\r\n    hide &&\r\n    css`\r\n      display: none;\r\n    `}\r\n`;\r\n\r\nexport const ListText = styled.span`\r\n  word-break: break-word;\r\n\r\n  ${({ done }) =>\r\n    done &&\r\n    css`\r\n      text-decoration: line-through;\r\n    `}\r\n`;\r\n\r\nexport const TextRenameForm = styled.form`\r\n  display: grid;\r\n  grid-template-columns: 1fr auto auto;\r\n  align-items: center;\r\n  grid-gap: 10px;\r\n  padding: 10px;\r\n  border-bottom: 1px solid rgb(218, 218, 218);\r\n\r\n  ${({ hide }) =>\r\n    hide &&\r\n    css`\r\n      display: none;\r\n    `}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  width: 30px;\r\n  height: 30px;\r\n  padding: 0;\r\n  background-color: hsl(120, 100%, 25%);\r\n  cursor: pointer;\r\n  color: white;\r\n  border: none;\r\n  transition: background 0.5s linear;\r\n\r\n  &:hover {\r\n    filter: ${({ theme }) => theme.filter.hover};\r\n  }\r\n\r\n  &:active {\r\n    filter: ${({ theme }) => theme.filter.active};\r\n    outline: 2px solid black;\r\n  }\r\n\r\n  ${({ remove }) =>\r\n    remove &&\r\n    css`\r\n      background-color: hsl(357, 95%, 40%);\r\n\r\n      &:hover {\r\n        filter: ${({ theme }) => theme.filter.hover};\r\n      }\r\n\r\n      &:active {\r\n        filter: ${({ theme }) => theme.filter.active};\r\n        outline: 2px solid black;\r\n      }\r\n    `}\r\n\r\n  ${({ rename }) =>\r\n    rename &&\r\n    css`\r\n      background-color: hsl(200, 95%, 40%);\r\n\r\n      &:hover {\r\n        filter: ${({ theme }) => theme.filter.hover};\r\n      }\r\n\r\n      &:active {\r\n        filter: ${({ theme }) => theme.filter.active};\r\n        outline: 2px solid black;\r\n      }\r\n    `}\r\n`;\r\n","\r\nimport { Item, List, ListText, TextRenameForm, Button } from \"./styled\";\r\n\r\nexport const Tasks = ({\r\n  tasks,\r\n  hideDone,\r\n  newTaskContent,\r\n  toggleTaskDone,\r\n  renameTask,\r\n  removeTask,\r\n  changeTaskContent,\r\n  cancelRenameTask,\r\n  setNewTaskContent,\r\n}) => {\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <List>\r\n      {tasks.map((task) => (\r\n        <li key={task.id}>\r\n          <Item hide={(task.done && hideDone) || task.rename}>\r\n            <Button onClick={() => toggleTaskDone(task.id)}>\r\n              {task.done ? \"✔\" : \"\"}\r\n            </Button>\r\n            <ListText done={task.done}>{task.content}</ListText>\r\n            <Button\r\n              rename\r\n              onClick={() => renameTask(task.id)}\r\n              title=\"edytuj zadanie\"\r\n            >\r\n              🖊️\r\n            </Button>\r\n            <Button\r\n              remove\r\n              onClick={() => removeTask(task.id)}\r\n              title=\"usuń zadanie\"\r\n            >\r\n              🗑\r\n            </Button>\r\n          </Item>\r\n          <TextRenameForm hide={!task.rename} onSubmit={onFormSubmit}>\r\n            <input\r\n              value={newTaskContent}\r\n              type=\"text\"\r\n              placeholder=\"\"\r\n              onChange={({ target }) => setNewTaskContent(target.value)}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              title=\"Zatwierdź zmianę\"\r\n              onClick={() => changeTaskContent(task.id)}\r\n            >\r\n              ✔\r\n            </Button>\r\n            <Button\r\n              remove\r\n              type=\"button\"\r\n              title=\"Anuluj zmianę\"\r\n              onClick={() => cancelRenameTask(task.id)}\r\n            >\r\n              X\r\n            </Button>\r\n          </TextRenameForm>\r\n        </li>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledSection = styled.section`\r\n  display: grid;\r\n  grid-template-rows: auto minmax(50px, 1fr);\r\n  grid-gap: 5px;\r\n  box-shadow: 0 0 5px #ddd;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  display: grid;\r\n  grid-template-columns: 1fr auto;\r\n  padding: 20px;\r\n  grid-gap: 20px;\r\n  background-color: white;\r\n\r\n  @media (max-width: ${({ theme }) => theme.size.mobile}) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  background-color: white;\r\n`;\r\n\r\nexport const SectionBody = styled.div`\r\n  padding: 20px;\r\n  background-color: white;\r\n`;\r\n","import { StyledSection, Header, SectionBody, Title } from \"./styled\";\r\n\r\nexport const Section = ({ title, body, extraHeaderContent }) => (\r\n  <StyledSection>\r\n    <Header>\r\n      <Title>{title}</Title>\r\n      {extraHeaderContent}\r\n    </Header>\r\n    <SectionBody>{body}</SectionBody>\r\n  </StyledSection>\r\n);\r\n","import styled from \"styled-components\";\r\n\r\nexport const AdditionalButtons = styled.div`\r\n  display: grid;\r\n  grid-template-columns: auto auto;\r\n  grid-gap: 20px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.size.mobile}) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n  border: none;\r\n  background-color: white;\r\n  color: hsl(180, 100%, 25%);\r\n  transition: color 0.5s linear;\r\n\r\n  &:disabled {\r\n    color: #ddd;\r\n    pointer-events: none;\r\n  }\r\n\r\n  &:hover {\r\n    filter: ${({ theme }) => theme.filter.hover};\r\n  }\r\n\r\n  &:active {\r\n    filter: ${({ theme }) => theme.filter.active};\r\n  }\r\n`;\r\n","import { AdditionalButtons, StyledButton } from \"./styled\";\r\n\r\nexport const Buttons = ({\r\n  tasks,\r\n  hideDone,\r\n  finishAllTasks,\r\n  toggleHideDone,\r\n}) => {\r\n  return (\r\n    <AdditionalButtons>\r\n      {tasks.length > 0 && (\r\n        <>\r\n          <StyledButton onClick={toggleHideDone}>\r\n            {hideDone ? \"Pokaż\" : \"Ukryj\"} ukończone\r\n          </StyledButton>\r\n          <StyledButton\r\n            onClick={finishAllTasks}\r\n            disabled={tasks.every(({ done }) => done)}\r\n          >\r\n            Ukończ wszystkie\r\n          </StyledButton>\r\n        </>\r\n      )}\r\n    </AdditionalButtons>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.h1`\r\n  margin: 20px auto;\r\n`;\r\n","import { StyledHeader } from \"./styled\";\r\n\r\nexport const Header = ({ title }) => (\r\n  <header>\r\n    <StyledHeader>{title}</StyledHeader>\r\n  </header>\r\n);\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledMain = styled.main`\r\n  display: grid;\r\n  grid-template-rows: auto 1fr;\r\n  grid-gap: 10px;\r\n`;\r\n","import { StyledMain } from \"./styled\";\r\n\r\nexport const Main = ({ children }) => <StyledMain>{children}</StyledMain>;\r\n","import { useState } from \"react\";\nimport { Form } from \"./components/Main/Section/Form\";\nimport { Tasks } from \"./components/Main/Section/Tasks\";\nimport { Section } from \"./components/Main/Section\";\nimport { Buttons } from \"./components/Main/Section/Buttons\";\nimport { Header } from \"./components/Header\";\nimport { Main } from \"./components/Main\";\nimport { useTasks } from \"./useTasks\";\nimport { useLocalStorageTasks } from \"./useLocalStorageTasks\";\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(false);\n\n  const toggleHideDone = () => {\n    setHideDone((hideDone) => !hideDone);\n  };\n  \n  const [tasks, setTasks] = useLocalStorageTasks();\n\n  const {\n    newTaskContent,\n    addNewTask,\n    toggleTaskDone,\n    renameTask,\n    removeTask,\n    cancelRenameTask,\n    setNewTaskContent,\n    changeTaskContent,\n    finishAllTasks,\n  } = useTasks({tasks,setTasks});\n\n  return (\n    <>\n      <Header title=\"Lista zadań\" />\n      <Main>\n        <Section\n          title={\"Dodaj nowe zadanie\"}\n          body={<Form addNewTask={addNewTask} />}\n        />\n        <Section\n          title={\"Lista zadań\"}\n          extraHeaderContent={\n            <Buttons\n              tasks={tasks}\n              hideDone={hideDone}\n              finishAllTasks={finishAllTasks}\n              toggleHideDone={toggleHideDone}\n            />\n          }\n          body={\n            <Tasks\n              tasks={tasks}\n              newTaskContent={newTaskContent}\n              hideDone={hideDone}\n              toggleTaskDone={toggleTaskDone}\n              renameTask={renameTask}\n              removeTask={removeTask}\n              changeTaskContent={changeTaskContent}\n              cancelRenameTask={cancelRenameTask}\n              setNewTaskContent={setNewTaskContent}\n            />\n          }\n        />\n      </Main>\n    </>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useLocalStorageTasks = () => {\r\n  const [tasks, setTasks] = useState(\r\n    () => JSON.parse(localStorage.getItem(\"tasks\")) || []\r\n  );\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  return [tasks, setTasks];\r\n};\r\n","import { useState, } from \"react\";\r\n\r\nexport const useTasks = ({tasks, setTasks}) => {\r\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n  const addNewTask = (content) => {\r\n    setTasks((tasks) => [\r\n      ...tasks,\r\n      {\r\n        content,\r\n        done: false,\r\n        id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const toggleTaskDone = (id) => {\r\n    setTasks((tasks) =>\r\n      tasks.map((task) => {\r\n        if (task.id === id)\r\n          return {\r\n            ...task,\r\n            done: !task.done,\r\n          };\r\n        return task;\r\n      })\r\n    );\r\n  };\r\n\r\n  const renameTask = (id) => {\r\n    setTasks((tasks) =>\r\n      tasks.map((task) => ({\r\n        ...task,\r\n        rename: false,\r\n      }))\r\n    );\r\n\r\n    setTasks((tasks) =>\r\n      tasks.map((task) => {\r\n        if (task.id === id)\r\n          return {\r\n            ...task,\r\n            rename: true,\r\n            done: false,\r\n          };\r\n        return task;\r\n      })\r\n    );\r\n    setNewTaskContent(\"\");\r\n  };\r\n\r\n  const removeTask = (id) => {\r\n    setTasks((tasks) => tasks.filter((task) => task.id !== id));\r\n  };\r\n\r\n  const cancelRenameTask = (id) => {\r\n    setTasks((tasks) =>\r\n      tasks.map((task) => {\r\n        if (task.id === id)\r\n          return {\r\n            ...task,\r\n            rename: false,\r\n          };\r\n        return task;\r\n      })\r\n    );\r\n    setNewTaskContent(\"\");\r\n  };\r\n\r\n  const changeTaskContent = (id) => {\r\n    setNewTaskContent(newTaskContent);\r\n\r\n    if (newTaskContent.trim() === \"\") return cancelRenameTask(id);\r\n\r\n    setTasks((tasks) =>\r\n      tasks.map((task) => {\r\n        if (task.id === id)\r\n          return {\r\n            ...task,\r\n            content: newTaskContent,\r\n            rename: false,\r\n          };\r\n        return task;\r\n      })\r\n    );\r\n    setNewTaskContent(\"\");\r\n  };\r\n\r\n  const finishAllTasks = () => {\r\n    setTasks((tasks) =>\r\n      tasks.map((task) => ({\r\n        ...task,\r\n        done: true,\r\n      }))\r\n    );\r\n  };\r\n\r\n  return {\r\n    tasks,\r\n    newTaskContent,\r\n    addNewTask,\r\n    toggleTaskDone,\r\n    renameTask,\r\n    removeTask,\r\n    cancelRenameTask,\r\n    setNewTaskContent,\r\n    changeTaskContent,\r\n    finishAllTasks,\r\n  };\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { theme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\r\n  colors: {\r\n    mainColor: \"teal\",\r\n    backgroundColor: \"#eee\",\r\n  },\r\n  size: {\r\n    mobile: \"767px\",\r\n  },\r\n  filter: {\r\n    hover: \"brightness(110%)\",\r\n    active: \"brightness(125%)\",\r\n  },\r\n};\r\n"],"sourceRoot":""}