{"version":3,"sources":["features/tasks/tasksSlice.js","features/tasks/Form/styled.js","features/tasks/Form/index.js","features/tasks/TaskRename/styled.js","features/tasks/TasksList/styled.js","features/tasks/TaskRename/Index.js","features/tasks/TasksList/index.js","common/Section/styled.js","common/Section/index.js","features/tasks/Buttons/styled.js","features/tasks/Buttons/index.js","common/Header/styled.js","common/Header/index.js","common/Main/styled.js","common/Main/index.js","features/tasks/Tasks.js","GlobalStyle.js","reportWebVitals.js","store.js","index.js","theme.js"],"names":["tasksSlice","createSlice","name","initialState","tasks","hideDone","reducers","addTask","payload","push","toggleTaskDone","selectedTaskId","index","findIndex","id","done","setAllTasksDone","forEach","task","removeTask","splice","renameTask","rename","cancelRenameTask","acceptRenameTask","toggleHideDone","state","actions","selectTasks","StyledForm","styled","form","theme","size","mobile","TextInput","input","Button","button","colors","mainColor","filter","hover","active","Form","useState","newTaskContent","setNewTaskContent","textFocus","useRef","dispatch","useDispatch","onSubmit","event","preventDefault","trim","content","nanoid","current","focus","value","ref","type","placeholder","onChange","target","TextRenameForm","hide","css","List","ul","Item","span","ListText","remove","TaskRename","title","onClick","TasksList","useSelector","map","StyledSection","section","Header","header","Title","h2","SectionBody","div","Section","body","extraHeaderContent","AdditionalButtons","StyledButton","Buttons","length","disabled","every","StyledHeader","h1","StyledMain","main","Main","children","Tasks","GlobalStyle","createGlobalStyle","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","tasksReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.3d13ef88.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst tasksSlice = createSlice({\r\n  name: \"tasks\",\r\n  initialState: {\r\n    tasks: [],\r\n    hideDone: false,\r\n  },\r\n  reducers: {\r\n    addTask: ({ tasks }, { payload }) => {\r\n      tasks.push(payload);\r\n    },\r\n    toggleTaskDone: ({ tasks }, { payload: selectedTaskId }) => {\r\n      const index = tasks.findIndex(({ id }) => id === selectedTaskId);\r\n      tasks[index].done = !tasks[index].done;\r\n    },\r\n    setAllTasksDone: ({ tasks }) => {\r\n      tasks.forEach((task) => {\r\n        task.done = true;\r\n      });\r\n    },\r\n    removeTask: ({ tasks }, { payload: selectedTaskId }) => {\r\n      const index = tasks.findIndex(({ id }) => id === selectedTaskId);\r\n      tasks.splice(index, 1);\r\n    },\r\n    renameTask: ({ tasks }, { payload: selectedTaskId }) => {\r\n      const index = tasks.findIndex(({ id }) => id === selectedTaskId);\r\n      tasks.forEach((task) => {\r\n        task.rename = false;\r\n      });\r\n      tasks[index].rename = true;\r\n      tasks[index].done = false;\r\n    },\r\n    cancelRenameTask: ({ tasks }, { payload: selectedTaskId }) => {\r\n      const index = tasks.findIndex(({ id }) => id === selectedTaskId);\r\n      tasks[index].rename = false;\r\n    },\r\n    acceptRenameTask: ({ tasks }, { payload }) => {\r\n      const index = tasks.findIndex(({ id }) => id === payload.id);\r\n      tasks.splice(index, 1, payload);\r\n    },\r\n    toggleHideDone: (state) => {\r\n      state.hideDone = !state.hideDone;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  addTask,\r\n  toggleHideDone,\r\n  toggleTaskDone,\r\n  setAllTasksDone,\r\n  removeTask,\r\n  renameTask,\r\n  cancelRenameTask,\r\n  acceptRenameTask,\r\n} = tasksSlice.actions;\r\nexport const selectTasks = (state) => state.tasks;\r\nexport default tasksSlice.reducer;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n  display: grid;\r\n  grid-template-columns: 1fr auto;\r\n  grid-gap: 20px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.size.mobile}) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const TextInput = styled.input`\r\n  padding: 10px;\r\n  background-color: white;\r\n  border: 1px solid rgb(220, 220, 220);\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  background-color: ${({ theme }) => theme.colors.mainColor};\r\n  color: rgb(230, 230, 230);\r\n  padding: 10px;\r\n  border: none;\r\n  transition: background 0.5s linear, transform 0.5s linear;\r\n\r\n  &:hover {\r\n    filter: ${({ theme }) => theme.filter.hover};\r\n    transform: scale(1.1);\r\n  }\r\n\r\n  &:active {\r\n    filter: ${({ theme }) => theme.filter.active};\r\n    outline: 2px solid black;\r\n  }\r\n`;\r\n","import { nanoid } from \"@reduxjs/toolkit\";\r\nimport { useRef, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addTask } from \"../tasksSlice\";\r\nimport { StyledForm, TextInput, Button } from \"./styled\";\r\n\r\nexport const Form = () => {\r\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n  const textFocus = useRef(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (newTaskContent.trim() === \"\") return;\r\n\r\n    dispatch(\r\n      addTask({\r\n        content: newTaskContent,\r\n        done: false,\r\n        rename: false,\r\n        id: nanoid(),\r\n      })\r\n    );\r\n    setNewTaskContent(\"\");\r\n    textFocus.current.focus();\r\n  };\r\n\r\n  return (\r\n    <StyledForm onSubmit={onFormSubmit}>\r\n      <TextInput\r\n        value={newTaskContent}\r\n        ref={textFocus}\r\n        type=\"text\"\r\n        placeholder=\"Co jest do zrobienia?\"\r\n        onChange={({ target }) => setNewTaskContent(target.value)}\r\n      />\r\n      <Button>Dodaj zadanie</Button>\r\n    </StyledForm>\r\n  );\r\n};\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const TextRenameForm = styled.form`\r\n  display: grid;\r\n  grid-template-columns: 1fr auto auto;\r\n  align-items: center;\r\n  grid-gap: 10px;\r\n  padding: 10px;\r\n  border-bottom: 1px solid rgb(218, 218, 218);\r\n\r\n  ${({ hide }) =>\r\n    hide &&\r\n    css`\r\n      display: none;\r\n    `}\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n  background-color: white;\r\n  list-style: none;\r\n  padding: 0;\r\n`;\r\n\r\nexport const Item = styled.span`\r\n  display: grid;\r\n  grid-template-columns: auto 1fr repeat(2, auto);\r\n  align-items: center;\r\n  grid-gap: 10px;\r\n  padding: 10px;\r\n  border-bottom: 1px solid rgb(218, 218, 218);\r\n\r\n  ${({ hide }) =>\r\n    hide &&\r\n    css`\r\n      display: none;\r\n    `}\r\n`;\r\n\r\nexport const ListText = styled.span`\r\n  word-break: break-word;\r\n\r\n  ${({ done }) =>\r\n    done &&\r\n    css`\r\n      text-decoration: line-through;\r\n    `}\r\n`;\r\n\r\nexport const TextRenameForm = styled.form`\r\n  display: grid;\r\n  grid-template-columns: 1fr auto auto;\r\n  align-items: center;\r\n  grid-gap: 10px;\r\n  padding: 10px;\r\n  border-bottom: 1px solid rgb(218, 218, 218);\r\n\r\n  ${({ hide }) =>\r\n    hide &&\r\n    css`\r\n      display: none;\r\n    `}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  width: 30px;\r\n  height: 30px;\r\n  padding: 0;\r\n  background-color: hsl(120, 100%, 25%);\r\n  cursor: pointer;\r\n  color: white;\r\n  border: none;\r\n  transition: background 0.5s linear;\r\n\r\n  &:hover {\r\n    filter: ${({ theme }) => theme.filter.hover};\r\n  }\r\n\r\n  &:active {\r\n    filter: ${({ theme }) => theme.filter.active};\r\n    outline: 2px solid black;\r\n  }\r\n\r\n  ${({ remove }) =>\r\n    remove &&\r\n    css`\r\n      background-color: hsl(357, 95%, 40%);\r\n\r\n      &:hover {\r\n        filter: ${({ theme }) => theme.filter.hover};\r\n      }\r\n\r\n      &:active {\r\n        filter: ${({ theme }) => theme.filter.active};\r\n        outline: 2px solid black;\r\n      }\r\n    `}\r\n\r\n  ${({ rename }) =>\r\n    rename &&\r\n    css`\r\n      background-color: hsl(200, 95%, 40%);\r\n\r\n      &:hover {\r\n        filter: ${({ theme }) => theme.filter.hover};\r\n      }\r\n\r\n      &:active {\r\n        filter: ${({ theme }) => theme.filter.active};\r\n        outline: 2px solid black;\r\n      }\r\n    `}\r\n`;\r\n","import { useState } from \"react\";\r\nimport { TextRenameForm } from \"./styled\";\r\nimport { Button } from \"../TasksList/styled\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { cancelRenameTask, acceptRenameTask } from \"../tasksSlice\";\r\n\r\nexport const TaskRename = ({ task }) => {\r\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    setNewTaskContent(\"\");\r\n  };\r\n\r\n  return (\r\n    <TextRenameForm hide={!task.rename} onSubmit={onFormSubmit}>\r\n      <input\r\n        value={newTaskContent}\r\n        type=\"text\"\r\n        placeholder=\"\"\r\n        onChange={({ target }) => setNewTaskContent(target.value)}\r\n      />\r\n      <Button\r\n        type=\"submit\"\r\n        title=\"Zatwierdź zmianę\"\r\n        onClick={() => {\r\n          if (newTaskContent === \"\") dispatch(cancelRenameTask(task.id));\r\n          else\r\n            dispatch(\r\n              acceptRenameTask({\r\n                content: newTaskContent,\r\n                done: false,\r\n                rename: false,\r\n                id: task.id,\r\n              })\r\n            );\r\n        }}\r\n      >\r\n        ✔\r\n      </Button>\r\n      <Button\r\n        remove\r\n        type=\"button\"\r\n        title=\"Anuluj zmianę\"\r\n        onClick={() => dispatch(cancelRenameTask(task.id))}\r\n      >\r\n        X\r\n      </Button>\r\n    </TextRenameForm>\r\n  );\r\n};\r\n","import { TaskRename } from \"../TaskRename/Index\";\r\nimport { Item, List, ListText, Button } from \"./styled\";\r\nimport {\r\n  selectTasks,\r\n  toggleTaskDone,\r\n  removeTask,\r\n  renameTask,\r\n} from \"../tasksSlice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport const TasksList = () => {\r\n  const { tasks, hideDone } = useSelector(selectTasks);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <List>\r\n      {tasks.map((task) => (\r\n        <li key={task.id}>\r\n          <Item hide={(task.done && hideDone) || task.rename}>\r\n            <Button onClick={() => dispatch(toggleTaskDone(task.id))}>\r\n              {task.done ? \"✔\" : \"\"}\r\n            </Button>\r\n            <ListText done={task.done}>{task.content}</ListText>\r\n            <Button\r\n              rename\r\n              onClick={() => dispatch(renameTask(task.id))}\r\n              title=\"edytuj zadanie\"\r\n            >\r\n              🖊️\r\n            </Button>\r\n            <Button\r\n              remove\r\n              onClick={() => dispatch(removeTask(task.id))}\r\n              title=\"usuń zadanie\"\r\n            >\r\n              🗑\r\n            </Button>\r\n          </Item>\r\n          <TaskRename task={task} />\r\n        </li>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledSection = styled.section`\r\n  display: grid;\r\n  grid-template-rows: auto minmax(50px, 1fr);\r\n  grid-gap: 5px;\r\n  box-shadow: 0 0 5px #ddd;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  display: grid;\r\n  grid-template-columns: 1fr auto;\r\n  padding: 20px;\r\n  grid-gap: 20px;\r\n  background-color: white;\r\n\r\n  @media (max-width: ${({ theme }) => theme.size.mobile}) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  background-color: white;\r\n`;\r\n\r\nexport const SectionBody = styled.div`\r\n  padding: 20px;\r\n  background-color: white;\r\n`;\r\n","import { StyledSection, Header, SectionBody, Title } from \"./styled\";\r\n\r\nexport const Section = ({ title, body, extraHeaderContent }) => (\r\n  <StyledSection>\r\n    <Header>\r\n      <Title>{title}</Title>\r\n      {extraHeaderContent}\r\n    </Header>\r\n    <SectionBody>{body}</SectionBody>\r\n  </StyledSection>\r\n);\r\n","import styled from \"styled-components\";\r\n\r\nexport const AdditionalButtons = styled.div`\r\n  display: grid;\r\n  grid-template-columns: auto auto;\r\n  grid-gap: 20px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.size.mobile}) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n  border: none;\r\n  background-color: white;\r\n  color: hsl(180, 100%, 25%);\r\n  transition: color 0.5s linear;\r\n\r\n  &:disabled {\r\n    color: #ddd;\r\n    pointer-events: none;\r\n  }\r\n\r\n  &:hover {\r\n    filter: ${({ theme }) => theme.filter.hover};\r\n  }\r\n\r\n  &:active {\r\n    filter: ${({ theme }) => theme.filter.active};\r\n  }\r\n`;\r\n","import { AdditionalButtons, StyledButton } from \"./styled\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectTasks, toggleHideDone, setAllTasksDone } from \"../tasksSlice\";\r\n\r\nexport const Buttons = () => {\r\n  const { tasks, hideDone } = useSelector(selectTasks);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <AdditionalButtons>\r\n      {tasks.length > 0 && (\r\n        <>\r\n          <StyledButton onClick={() => dispatch(toggleHideDone())}>\r\n            {hideDone ? \"Pokaż\" : \"Ukryj\"} ukończone\r\n          </StyledButton>\r\n          <StyledButton\r\n            onClick={() => dispatch(setAllTasksDone())}\r\n            disabled={tasks.every(({ done }) => done)}\r\n          >\r\n            Ukończ wszystkie\r\n          </StyledButton>\r\n        </>\r\n      )}\r\n    </AdditionalButtons>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.h1`\r\n  margin: 20px auto;\r\n`;\r\n","import { StyledHeader } from \"./styled\";\r\n\r\nexport const Header = ({ title }) => (\r\n  <header>\r\n    <StyledHeader>{title}</StyledHeader>\r\n  </header>\r\n);\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledMain = styled.main`\r\n  display: grid;\r\n  grid-template-rows: auto 1fr;\r\n  grid-gap: 10px;\r\n`;\r\n","import { StyledMain } from \"./styled\";\r\n\r\nexport const Main = ({ children }) => <StyledMain>{children}</StyledMain>;\r\n","import { Form } from \"./Form\";\nimport { TasksList } from \"./TasksList\";\nimport { Section } from \"../../common/Section\";\nimport { Buttons } from \"./Buttons\";\nimport { Header } from \"../../common/Header\";\nimport { Main } from \"../../common/Main\";\n\nexport const Tasks = () => {\n  return (\n    <>\n      <Header title=\"Lista zadań\" />\n      <Main>\n        <Section title={\"Dodaj nowe zadanie\"} body={<Form />} />\n        <Section\n          title={\"Lista zadań\"}\n          extraHeaderContent={<Buttons />}\n          body={<TasksList />}\n        />\n      </Main>\n    </>\n  );\n};\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\nhtml {\r\n  box-sizing: border-box;\r\n}\r\n\r\n*, ::after, ::before {\r\n  box-sizing: inherit;\r\n  margin: 0;\r\n}\r\n\r\nbutton {\r\n  cursor: pointer;\r\n}\r\n\r\nbody {\r\n  max-width: 900px;\r\n  margin: 0 auto;\r\n  padding: 10px;\r\n  font-family: 'Montserrat', sans-serif;\r\n  background-color: ${({ theme }) => theme.colors.backgroundColor};\r\n}\r\n\r\n`;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport tasksReducer from \"./features/tasks/tasksSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    tasks: tasksReducer,\r\n  },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Tasks } from \"./features/tasks/Tasks\";\nimport { ThemeProvider } from \"styled-components\";\nimport { Provider } from \"react-redux\";\nimport { theme } from \"./theme\";\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <GlobalStyle />\n        <Tasks />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\r\n  colors: {\r\n    mainColor: \"teal\",\r\n    backgroundColor: \"#eee\",\r\n  },\r\n  size: {\r\n    mobile: \"767px\",\r\n  },\r\n  filter: {\r\n    hover: \"brightness(110%)\",\r\n    active: \"brightness(125%)\",\r\n  },\r\n};\r\n"],"sourceRoot":""}